FILE = Table
PRODUCT = {{spec.name}}

FLAVOR=ANY

{% if   (spec.compiler|string).find('gcc@7.3.0')==0   %}{%set upscompquals = 'e17' %}
{% elif (spec.compiler|string).find('gcc@6.4.0')==0   %}{%set upscompquals = 'e15' %}
{% elif (spec.compiler|string).find('gcc@6.3.0')==0   %}{%set upscompquals = 'e14' %}
{% elif (spec.compiler|string).find('gcc@4.9.3')==0   %}{%set upscompquals = 'e10' %}
{% elif (spec.compiler|string).find('gcc@6.4.0')==0   %}{%set upscompquals = 'e17' %}
{% elif (spec.compiler|string).find('clang@5.0.1')==0 %}{%set upscompquals = 'c2' %}
{% endif %}

{% if (spec.compiler_flags|string).find('-g')>0 %}{%set upsdebugquals="debug"%}
{%else%}{%set upsdebugquals="opt"%}
{%endif%}

{%if  upscompquals  %}
QUALIFIERS="{{upscompquals}}:{{upsdebugquals}}"
{%else%}
QUALIFIERS=""
{%endif%}

Action = setup
    prodDir()
    setupEnv()
{% for package in spec._dependencies.keys() %}
    setupRequired({{package}} {%for c in (spec|string|replace('\n',' ')).split('^')%}{%if c.split('@')[0] == package%}{{c.split('@')[1].split('%')[0]}}{%endif%}{%endfor%} -f ${UPS_PROD_FLAVOR} -q "${UPS_PROD_QUALIFIERS}")
{% endfor %}

{% block environment %}
{% for command_name, cmd in environment_modifications %}
{# A non-standard separator is required #}
{% if command_name == 'PrependPath' %}
    PathPrepend({{ cmd.name }}, "{{ cmd.value|replace(spec.prefix,'${UPS_PROD_DIR}') }}", "{{cmd.separator}}")
{% elif command_name == 'AppendPath' %}
    PathAppend({{ cmd.name }}, "{{ cmd.value|replace(spec.prefix,'${UPS_PROD_DIR}') }}", "{{cmd.separator}}")
{% elif command_name == 'RemovePath' %}
    PathRemove({{ cmd.name }}, "{{ cmd.value|replace(spec.prefix,'${UPS_PROD_DIR}') }}", "{{ cmd.separator }}")
{% elif command_name == 'SetEnv' %}
    EnvSet({{ cmd.name }}, "{{ cmd.value|replace(spec.prefix,'${UPS_PROD_DIR}') }}")
{% elif command_name == 'UnsetEnv' %}
    EnvUnset({{ cmd.name }})
{% endif %}
{#  #}
{% endfor %}
{% endblock %}

{% block footer %}
{# In case he module needs to be extended with custom TCL code #}
{% endblock %}
